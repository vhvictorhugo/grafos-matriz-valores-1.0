Representação de grafos: deve-se usar a matriz de valores.
A biblioteca projetada deve implementar funções para:
- Retornar a ordem do grafo ✓
- Retornar o tamanho do grafo ✓
- Retornar a densidade ε(G) do grafo ✓
- Retornar os vizinhos de um vértice fornecido ✓
- Determinar o grau de um vértice fornecido ✓
- Verificar se um vértice é articulação ✓
- Determinar a sequência de vértices visitados na busca em largura e informar a(s) 
aresta(s) que não faz(em) parte da árvore de busca em largura. ✓
- Verificar se um grafo possui ciclo. ✓
-Determinar distância e caminho mínimo ✓
    - Sua biblioteca deve ser capaz de calcular a distância e caminho mínimo entre um 
    dado vértice e todos os outros vértices do grafo.
-Determinar a árvore geradora mínima de um grafo.
    - A árvore geradora mínima deve ser escrita em um arquivo (no mesmo formato de 
    entrada do grafo), assim como seu peso total.
-Verificar se um grafo é euleriano. Em caso afirmativo, determinar uma cadeia euleriana 
fechada. ✓
    - Utilize o algoritmo de Fleury.

- Determinar o número de componentes conexas do grafo e os vértices de cada componente 
(Dica: pesquise o algoritmo de Roy para computar componentes conexas)
- Por fim, em https://paad-grafos.herokuapp.com pode-se salvar o grafo num arquivo .json. 
Assim deve-se implementar uma rotina que leia o arquivo .json e o coloque no formato de 
entrada exigido pelo arquivo de entrada deste trabalho. Além disso, deve-se implementar 
uma rotina que pegue um arquivo texto no formato de entrada exigido neste trabalho e gere 
o arquivo .json de modo que seja importado para o https://paad-grafos.herokuapp.com
Para o teste da biblioteca faça um programa principal que possibilite testar todas as 
funcionalidades.